---
# tasks file for Longhorn-Taints

# ============================================== Ping ==============================================

- name: Ping
  become: true
  ansible.builtin.ping:

# ============================================= Проверка =============================================

- name: Проверка состояния Longhorn перед изменением настроек
  ansible.builtin.include_tasks:
    file: check_longhorn_pods.yml

- name: Проверка состояния PVC
  ansible.builtin.include_tasks:
    file: check_longhorn_pvc.yml

# =============================== Установка настройки Taint toleration ===============================

- name: Установка настройки толерантности к "{{ taint }}"
  delegate_to: "{{ first_cpl_node }}"
  run_once: true
  block:

    # =============== Установка настройки Taint toleration ==============

    # ===== Модулем k8s_json_patch =====

    # - name: Добавление настройки толерантности к "{{ taint }}" (Вариант с модулем kubernetes.core.k8s_json_patch)
    #   kubernetes.core.k8s_json_patch:
    #     kind: settings
    #     namespace: "{{ longhorn_namespace }}"
    #     name: taint-toleration
    #     api_version: "{{ longhorn_api_version }}"
    #     patch:
    #       - op: replace
    #         path: /value
    #         value: "{{ taint }}"

    # ========= C помощью JSON =========

    - name: Создать папку для копирования в нее JSON
      ansible.builtin.file:
        path: "{{ longhorn_project_folder }}"
        state: directory
        owner: root
        group: root
        mode: "0775"

    - name: Скопировать Longhorn_NoSchedule_toleration_add.json в {{ longhorn_project_folder }}
      become: true
      ansible.builtin.template:
        src: Longhorn_NoSchedule_toleration_add.json.j2
        dest: "{{ longhorn_project_folder }}/Longhorn_NoSchedule_toleration_add.json"
        owner: root
        group: root
        mode: "0644"

    - name: Добавление настройки толерантности к "{{ taint }}" (Вариант с json)
      ansible.builtin.shell: |
        kubectl patch lhs taint-toleration -n longhorn-system --type='json' \
        --patch-file {{ longhorn_project_folder }}/Longhorn_NoSchedule_toleration_add.json

# ============================================= Проверка =============================================

- name: Подождать 30 секунд перед запуском проверки
  ansible.builtin.pause:
    seconds: 30

- name: Проверка состояния Longhorn после изменения настроек
  ansible.builtin.include_tasks:
    file: check_longhorn_pods.yml

- name: Подождать еще 5 секунд перед запуском проверки
  ansible.builtin.pause:
    seconds: 5

- name: Проверка состояния Longhorn после изменения настроек
  ansible.builtin.include_tasks:
    file: check_longhorn_pods.yml

# =================================== Повесить taint на str ноды ===================================

- name: Блок установки taint на str ноды
  when:
    - "'str' in inventory_hostname"
  block:
    
    # # ======== Модулем k8s_taint =======

    # - name: Повесить taint на ноду "{{ inventory_hostname }}"
    #   throttle: 1
    #   delegate_to: "{{ first_cpl_node }}"
    #   when:
    #     - "'str' in inventory_hostname"
    #   kubernetes.core.k8s_taint:
    #     state: present
    #     name: "{{ inventory_hostname }}"
    #     taints:
    #     - effect: NoSchedule
    #       key: "key1"
    #       value: "value1"

    # ======== С помощью команды =======

    - name: Повесить taint "{{ taint }}" на str ноды
      ignore_errors: true
      delegate_to: "{{ first_cpl_node }}"
      throttle: 1
      ansible.builtin.shell: |
        kubectl taint nodes {{ inventory_hostname }} {{ taint }}

- name: Перезагрузка str нод
  when:
    - "'str' in inventory_hostname"
  throttle: 1
  become: true
  ansible.builtin.reboot:

# ============================================= Проверка =============================================

- name: Подождать 30 секунд перед запуском проверки
  ansible.builtin.pause:
    seconds: 30

- name: Проверка состояния Longhorn после перезагрузки str нод
  ansible.builtin.include_tasks:
    file: check_longhorn_pods.yml
