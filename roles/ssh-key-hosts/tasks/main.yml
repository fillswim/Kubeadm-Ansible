---

# =============================================================================
#                            Генерация SSH-ключа ed25519
# =============================================================================
- name: Проверка, что ssh ключ уже сгененрирован
  ansible.builtin.stat:
    path: "~/.ssh/id_ed25519"
  register: ssh_key_exists

# - name: Вывод результатов проверки, что ssh ключ уже сгененрирован
#   ansible.builtin.debug:
#     var: ssh_key_exists.stat.exists

- name: SSH keygen node {{ inventory_hostname }}
  when:
    - not ssh_key_exists.stat.exists
  ansible.builtin.shell: |
    set -o pipefail
    ssh-keygen -t ed25519 -P "" -f ~/.ssh/id_ed25519
  args:
    executable: /bin/bash

# =============================================================================
#                       Получение публичного ключа ed25519
# =============================================================================
- name: Получить публичный ключ node {{ inventory_hostname }}
  changed_when: false
  ansible.builtin.shell: |
    set -o pipefail
    cat ~/.ssh/id_ed25519.pub
  register: ssh_keygen_output
  args:
    executable: /bin/bash

- name: Вывод публичного ключа node {{ inventory_hostname }}
  ansible.builtin.debug:
    var: ssh_keygen_output.stdout

# =============================================================================
#                 Добавление публичного ключа в authorized_keys
# =============================================================================
- name: Получить список всех хостов из inventory
  run_once: true
  ansible.builtin.set_fact:
    all_hosts_list: "{{ groups['all'] }}"

- name: Добавить публичный ключ в authorized_keys для всех хостов из inventory
  delegate_to: "{{ item }}"
  when:
    - item != inventory_hostname
  ansible.builtin.lineinfile:
    path: ~/.ssh/authorized_keys
    line: "{{ ssh_keygen_output.stdout }}"
  loop: "{{ all_hosts_list }}"
  loop_control:
    label: "{{ item }}"
