# ==========================================================
#                    InitConfiguration
# ==========================================================

kind: InitConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: abcdef.0123456789abcdef
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
nodeRegistration:
  # name: node
  name: {{ ansible_facts.fqdn }}                            # Имя первой control ноды
  # criSocket: unix:///var/run/containerd/containerd.sock
  criSocket: {{ '\"' + path_to_cri_socket + '\"' }}
  imagePullPolicy: IfNotPresent
  imagePullSerial: true
  taints: null
localAPIEndpoint:
  # advertiseAddress: 1.2.3.4
  advertiseAddress: {{ ansible_facts.default_ipv4.address }}
  # bindPort: 6443
  bindPort: {{ node_control_plane_port }}
timeouts:
  controlPlaneComponentHealthCheck: 4m0s
  discovery: 5m0s
  etcdAPICall: 2m0s
  kubeletHealthCheck: 4m0s
  kubernetesAPICall: 1m0s
  tlsBootstrap: 5m0s
  upgradeManifests: 5m0s

# ==========================================================
#                    ClusterConfiguration
# ==========================================================
---
kind: ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
certificatesDir: /etc/kubernetes/pki                                                        # Где будут находиться сертификаты
caCertificateValidityPeriod: 87600h0m0s
certificateValidityPeriod: 8760h0m0s
# clusterName: kubernetes
clusterName: {{ cluster_name }}                                                             # Доменное имя
controllerManager: {}
dns: {}
etcd:
  local:
    dataDir: /var/lib/etcd
# imageRepository: registry.k8s.io
imageRepository: {{ '\"' + image_repository + '\"' }}
apiServer:
  extraArgs:
    - name: authorization-mode
      value: Node,RBAC
    - name: bind-address
      value: 0.0.0.0
    - name: service-cluster-ip-range
      value: {{ '\"' + cluster_service_network + '\"' }}                                      # Сеть для сервисов
    - name: service-node-port-range
      value: {{ cluster_pod_network_ports }}                                                  # Порты для сети для сервисов NodePort
    # authorization-mode: Node,RBAC
    # bind-address: 0.0.0.0
    # service-cluster-ip-range: {{ '\"' + cluster_service_network + '\"' }}                   # Сеть для сервисов
    # service-node-port-range: {{ cluster_pod_network_ports }}                                # Порты для сети для сервисов NodePort
encryptionAlgorithm: RSA-2048
controlPlaneEndpoint: {{ cluster_control_plane_vip }}:{{ cluster_control_plane_port }}        # Кластерный IP на HAProxy
# kubernetesVersion: 1.33.0
kubernetesVersion: {{ '\"' + kubernetes_minor_version + '\"' }}
networking:
  # serviceSubnet: 10.96.0.0/12
  serviceSubnet: {{ '\"' + cluster_service_network + '\"' }}                                  # Сеть для сервисов
  podSubnet: {{ '\"' + cluster_pod_network + '\"' }}                                          # Сеть для подов
  # dnsDomain: cluster.local
  dnsDomain: {{ cluster_name }}
# proxy: {}                                                                                   # kube-proxy включен по умолчанию
proxy:
  disabled: true                                                                              # disable kube-proxy
scheduler: {}                                                                                 # kube-scheduler включен по умолчанию

---
# ===================================================================
#                           KubeletConfiguration
# ===================================================================
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
serverTLSBootstrap: true
clusterDNS:                                                                          # Нужно установить на каждой ноде кластера
- {{ cluster_dns_server_ip }}                                                        # IP адреса DNS серверов кластера
systemReserved:
  memory: 512Mi
  cpu: 500m
  ephemeral-storage: 2Gi
# Default: "10Mi"
containerLogMaxSize: 1Mi
# Default: 5
containerLogMaxFiles: 3