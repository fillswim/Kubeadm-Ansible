---
# tasks file for Kubeadm-Update-Cluster


# ============================================== Ping ==============================================

# - name: Ping
#   become: true
#   ansible.builtin.ping:

# ======================================= Get node k8s version =====================================

- name: Check node k8s version
  delegate_to: "{{ groups['k8s_masters'][0] }}"
  changed_when: false
  ansible.builtin.shell: |
    kubectl get nodes {{ inventory_hostname }} -o=jsonpath='{.status.nodeInfo.kubeletVersion}'
  register: node_k8s_current_version

- name: Create variable node_k8s_current_version
  ansible.builtin.set_fact:
    node_k8s_current_version: "{{ node_k8s_current_version.stdout }}"

- name: Show node_k8s_current_version
  ansible.builtin.debug:
    var: node_k8s_current_version

- name: Create variable future_k8s_version
  ansible.builtin.set_fact:
    future_k8s_version: "{{ 'v' + kubernetes_minor_version }}"

- name: Show future_k8s_version
  ansible.builtin.debug:
    var: future_k8s_version

# ========================================= Update cluster =========================================

- name: Block on the 1-st Master
  become: true
  # when:
  #   - node_k8s_current_version != future_k8s_version                # Выполняется, исли текущая версия отличается от желаемой
  block:

    # ========================== Get join_path ==========================

    - name: Add kubernetes repository
      ansible.builtin.yum_repository:
        name: kubernetes
        file: kubernetes
        description: kubernetes
        baseurl: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_major_version }}/rpm/"
        enabled: true
        gpgcheck: true
        gpgkey: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_major_version }}/rpm/repodata/repomd.xml.key"
        exclude: "kubelet kubeadm kubectl cri-tools kubernetes-cni"

    - name: Обновление kubeadm, kubelet и kubectl для "RedHat"
      register: install_packages_output
      ansible.builtin.dnf:
        name:
          - "kubeadm-{{ kubernetes_minor_version }}-*"
          - "kubelet-{{ kubernetes_minor_version }}-*"
          - "kubectl-{{ kubernetes_minor_version }}-*"
        disable_excludes: all
        exclude: kubernetes
        state: present

    # =========================== Drain node ============================

    # - name: Drain {{ inventory_hostname }}
    #   delegate_to: "{{ groups['k8s_masters'][0] }}"
    #   ansible.builtin.shell: |
    #     kubectl drain {{ inventory_hostname }} --ignore-daemonsets

    # ========================= Kubeadm update ==========================

    - name: Update {{ inventory_hostname }}
      become: true
      ansible.builtin.shell: |
        kubeadm upgrade apply {{ future_k8s_version }} -y
      when:
        - inventory_hostname == groups['k8s_masters'][0]            # Выполняется только на 1-м Мастере

    - name: Update {{ inventory_hostname }}
      become: true
      ansible.builtin.shell: |
        kubeadm upgrade node
      when:
        - inventory_hostname not in groups['k8s_masters'][0]        # Выполняется на всех нодах кроме 1-го Мастера

    # ========================= Restart kubelet =========================

    - name: Restart kubelet
      become: true
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        name: kubelet

    # ========================== Uncordon node ==========================

    # - name: Uncordon {{ inventory_hostname }}
    #   delegate_to: "{{ groups['k8s_masters'][0] }}"
    #   ansible.builtin.shell: |
    #     kubectl uncordon {{ inventory_hostname }}
