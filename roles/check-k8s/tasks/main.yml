---
# tasks file for check-k8s

# ============================================== Ping ==============================================

- name: Ping
  become: true
  ansible.builtin.ping:

# ========================================== Блок вопроса ==========================================

# Выполняется на первом хосте группы all
- name: Блок вопроса
  delegate_to: "{{ groups['all'][0] }}"
  run_once: true
  block:

    - name: Задать вопрос
      ansible.builtin.pause:
        prompt: |
          Для проверки нод кластера наберите                                            - nodes
          Для вывода тейнтов на нодах кластера наберите                                 - taints
          Для проверки всех подов кластера наберите                                     - pods
          Для проверки нод Longhorn наберите                                            - lhn
          Для проверки утилизации дискового пространства на нодах Longhorn наберите     - lhn_util
          Для вывода PVC наберите                                                       - lhv
          Для проверки утилизации дискового пространства на PVC наберите                - lhv_util
          Для вывода настроек Longhorn наберите                                         - lhs
          Для вывода нод кластера для inventory наберите                                - inventory
      register: answer

    - name: Пересохранить факт
      ansible.builtin.set_fact:
        answer: "{{ answer.user_input | lower }}"

    - name: Вывод answer
      ansible.builtin.debug:
        var: hostvars[groups['all'][0]].answer

# ========================================= Nodes not Ready ========================================

- name: Блок "nodes"
  when:
    - "hostvars[groups['all'][0]].answer == 'nodes'"
  block:

    - name: Поиск нод "not Ready"
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get nodes -o wide | grep -iv Ready
      register: kubectl_nodes

    - name: Вывод нод "not Ready"
      ansible.builtin.debug:
        var: kubectl_nodes.stdout

# ======================================== Pods not Running ========================================

- name: Блок "pods"
  when:
    - "hostvars[groups['all'][0]].answer == 'pods'"
  block:

    - name: Поиск подов "not Running"
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get pods -A -o wide | grep -iv Running
      register: kubectl_pods

    - name: Вывод подов "not Running"
      ansible.builtin.debug:
        var: kubectl_pods.stdout

# =============================================== LHN ==============================================

- name: Блок "lhn"
  when:
    - "hostvars[groups['all'][0]].answer == 'lhn'"
  block:

    - name: Поиск нод Longhorn
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get lhn -n longhorn-system | grep str
      register: lhn_nodes

    - name: Вывод нод Longhorn
      ansible.builtin.debug:
        var: lhn_nodes.stdout

# =============================================== LHV ==============================================

- name: Блок "lhv"
  when:
    - "hostvars[groups['all'][0]].answer == 'lhv'"
  block:

    - name: Поиск PVC
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get lhv -n longhorn-system
      register: pvc

    - name: Вывод PVC
      ansible.builtin.debug:
        var: pvc.stdout

# ========================================= Тейнты на нодах ========================================

- name: Блок "taints"
  when:
    - "hostvars[groups['all'][0]].answer == 'taints'"
  block:

    - name: Поиск тейнтов на нодах
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get nodes --no-headers | awk '{print $1}' | xargs kubectl describe node | grep 'Taints:\|Name:'
      register: kubectl_taints

    - name: Вывод тейнтов на нодах
      ansible.builtin.debug:
        var: kubectl_taints.stdout

# ======================================== Longhorn Settings =======================================

- name: Блок "lhs"
  when:
    - "hostvars[groups['all'][0]].answer == 'lhs'"
  block:

    - name: Проверка настроек Longhorn
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get lhs -n longhorn-system | grep 'current-longhorn-version\|priority-class\|replica-auto-balance\|storage-network\|taint-toleration'
      register: kubectl_longhorn_settings

    - name: Вывод настроек Longhorn
      ansible.builtin.debug:
        var: kubectl_longhorn_settings.stdout

# ========================================= Longhorn Nodes =========================================

- name: Блок "lhn_util"
  when:
    - "hostvars[groups['all'][0]].answer == 'lhn_util'"
  block:

    - name: Проверка утилизации дискового пространства на нодах Longhorn
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get lhn -n longhorn-system -o=jsonpath='{range .items[*]}{.metadata.name} {.spec.disks.*.path} {.status.diskStatus.*.storageAvailable} {.status.diskStatus.*.storageMaximum} {.status.diskStatus.*.storageScheduled}{"\n"}{end}' | grep str | awk '{print "Nodename:"$1 " Diskpath:"$2 " DiskAvailable:"$3 " DiskMaximum:"$4 " DiskScheduled:"$5" Used:"($5/$4)*100"%" }'
      register: kubectl_lhn

    - name: Вывод утилизации дискового пространства на нодах Longhorn
      ansible.builtin.debug:
        var: kubectl_lhn.stdout

# ======================================== Longhorn Volumes ========================================

- name: Блок "lhv_util"
  when:
    - "hostvars[groups['all'][0]].answer == 'lhv_util'"
  block:

    - name: Проверка утилизации дискового пространства в PVC
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get lhv -n longhorn-system  -o=jsonpath='{range .items[*]}{.metadata.name} {.status.kubernetesStatus.namespace} {.status.state} {.spec.size} {.status.actualSize}{"\n"}{end}' | awk '{print "Lhv:"$1 " Namespace:"$2 " State:"$3 " Size:"$4 " actualSize:"$5 " Used:"($5/$4)*100"%" }'
      register: kubectl_lhv

    - name: Вывод утилизации дискового пространства в PVC
      ansible.builtin.debug:
        var: kubectl_lhv.stdout

# ======================================= Nodes для inventory ======================================

- name: Блок "inventory"
  when:
    - "hostvars[groups['all'][0]].answer == 'inventory'"
  block:

    - name: Поиск нод
      changed_when: false
      ansible.builtin.shell: |
        set -o pipefail
        kubectl get nodes -o wide | awk '{print $1,"ansible_ssh_host="$6}'
      register: kubectl_nodes_for_inventory

    - name: Вывод списка нод для inventory
      ansible.builtin.debug:
        var: kubectl_nodes_for_inventory.stdout
