---
# tasks file for Install-Longhorn

# ============================================== Ping ==============================================

- name: Ping
  become: true
  ansible.builtin.ping:

# ======================================== Install Longhorn ========================================

- name: Создание папки ~/longhorn
  ansible.builtin.file:
    path: /root/longhorn
    state: directory
    owner: root
    group: root
    mode: "0775"

- name: Copy values.yaml
  become: true
  ansible.builtin.copy:
    src: values.yaml
    dest: /root/longhorn/values.yaml
    owner: root
    group: root
    mode: "0644"

- name: Add Longhorn repo
  kubernetes.core.helm_repository:
    name: "{{ longhorn_helm_repo_name }}"
    repo_url: "{{ longhorn_helm_repo_url }}"

#- name: Install Longhorn with values.yaml
#  kubernetes.core.helm:
#    update_repo_cache: true
#    name: "{{ longhorn_release_name }}"                 # longhorn
#    chart_ref: "{{ longhorn_full_chart_name }}"         # longhorn/longhorn
#    release_namespace: "{{ longhorn_namespace }}"       # longhorn-system
#    create_namespace: true
#    wait: True
#    values_files:
#      - /root/longhorn/values.yaml

- name: Install Longhorn by default
  kubernetes.core.helm:
    update_repo_cache: true
    name: "{{ longhorn_release_name }}"                 # longhorn
    chart_ref: "{{ longhorn_full_chart_name }}"         # longhorn/longhorn
    release_namespace: "{{ longhorn_namespace }}"       # longhorn-system
    create_namespace: true
    wait: True

## ================================== Изменение api ресурсов Longhorn ===============================
#
#- name: Find priorityclass with value "{{ longhorn_priorityclass_value }}"
#  ignore_errors: true
#  changed_when: false
#  ansible.builtin.shell: |
#    kubectl get priorityclass | grep "{{ longhorn_priorityclass_value }}" | awk '{print $1}'
#  register: priorityclass
#
#- name: Create variable priorityclass
#  ansible.builtin.set_fact:
#    priorityclass: "{{ priorityclass.stdout }}"
#
#- name: Show priorityclass
#  ansible.builtin.debug:
#    var: priorityclass
#
#- name: Change priority-class to "{{ priorityclass }}"
#  kubernetes.core.k8s_json_patch:
#    kind: settings
#    namespace: longhorn-system
#    name: priority-class
#    api_version: longhorn.io/v1beta2
#    patch:
#      - op: replace
#        path: /value
#        value: "{{ priorityclass }}"

# =============================== Longhorn GUI с авторизацией (Ingress) ============================

# ======================= Install htpasswd ========================

- name: Install htpasswd for RedHat
  when: ansible_os_family == "RedHat"
  ansible.builtin.yum:
    name: httpd-tools
    state: latest

- name: Install htpasswd for Ubuntu
  when: ansible_os_family == "Ubuntu"
  ansible.builtin.apt:
    name: apache2-utils
    state: present

- name: Install passlib
  ansible.builtin.pip:
    name:
      - passlib

# ===================== Create htpasswd file ======================

- name: Add admin to auth
  community.general.htpasswd:
    path: "{{ htpasswd_file_path }}"
    name: admin
    password: password
    owner: root
    group: root
    mode: 0640

- name: Add user to auth
  community.general.htpasswd:
    path: "{{ htpasswd_file_path }}"
    name: user
    password: password

# ================ Convert htpasswd file to secret ================

- name: Delete old secret
  ignore_errors: true
  ansible.builtin.shell:
    cmd: |
      kubectl delete secret {{ longhorn_auth_secret_name }} \
      --namespace {{ longhorn_namespace }}

- name: Create secret
  ansible.builtin.shell:
    cmd: |
      kubectl create secret generic {{ longhorn_auth_secret_name }} \
      --namespace {{ longhorn_namespace }} \
      --from-file={{ htpasswd_file_path }}

# ================== Create Longhorn Ingress Role =================

- name: Copy Longhorn_Ingress.yaml
  become: true
  ansible.builtin.template:
    src: Longhorn_Ingress.yaml.j2
    dest: "{{ longhorn_project_folder }}/Longhorn_Ingress.yaml"
    owner: root
    group: root
    mode: "0644"

- name: Install Longhorn Ingress
  kubernetes.core.k8s:
    src: "{{ longhorn_project_folder }}/Longhorn_Ingress.yaml"
    state: present


# ============================ Longhorn GUI без авторизации (LoadBalancer) =========================

#- name: Copy Longhorn_LoadBalancer.yaml
#  become: true
#  ansible.builtin.template:
#    src: Longhorn_LoadBalancer.yaml.j2
#    dest: ~/longhorn/Longhorn_LoadBalancer.yaml
#    owner: root
#    group: root
#    mode: "0644"
#
#- name: Install Longhorn LoadBalancer
#  kubernetes.core.k8s:
#    src: ~/longhorn/Longhorn_LoadBalancer.yaml
#    state: present